{"version":3,"sources":["components/Search/index.js","components/Filter/index.js","components/Header/index.js","components/TodoItem/index.js","components/TodoList/index.js","components/ItemAddForm/index.js","components/App/index.js","index.js"],"names":["Search","state","term","onSearchChange","e","target","value","_this","props","react_default","a","createElement","className","type","id","onChange","this","htmlFor","Component","Filter","buttons","name","label","_this$props","filter","onFilterChange","map","_ref","buttonClass","key","onClick","Header","toDo","done","Search_Search","Filter_Filter","TodoItem","onDeleted","onToggleDone","onToggleImportant","todoClasses","important","TodoList","todos","items","todo","todoProps","Object","objectWithoutProperties","TodoItem_TodoItem","assign","ItemAddForm","onLabelChange","setState","onSubmit","preventDefault","onItemAdded","App","createTodoItem","Math","random","deleteItem","index","findIndex","el","before","slice","after","concat","toConsumableArray","addItem","_ref2","toggleProperty","arr","propName","oldItem","newItem","objectSpread","defineProperty","_ref3","_ref4","search","length","item","toLowerCase","indexOf","_this$state","doneCount","todoCount","visibleItems","src_components_Header","TodoList_TodoList","ItemAddForm_ItemAddForm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f2e1c7d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Search extends Component {\n  state = {\n    term: ''\n  };\n\n  onSearchChange = e => {\n    const term = e.target.value;\n    this.props.onSearchChange(term);\n  };\n\n  render() {\n    return (\n      <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n        <input\n          className=\"mdl-textfield__input\" type=\"text\" id=\"search-items\"\n          onChange={this.onSearchChange}\n        />\n        <label className=\"mdl-textfield__label\" htmlFor=\"search-items\">\n          Type to search...\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport './index.css';\n\nexport default class Filter extends Component {\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' }\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      let buttonClass = 'mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect';\n      if(isActive) buttonClass += ' mdl-button--accent';\n\n      return (\n        <button\n          className={buttonClass}\n          key={name}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </button>\n      )\n    });\n\n    return <div className=\"filter-buttons\">{buttons}</div>;\n  }\n}\n","import React from 'react';\n\nimport Search from '../Search';\nimport Filter from '../Filter';\n\nimport './index.css';\n\nconst Header = ({ toDo, done, onSearchChange, filter, onFilterChange }) => {\n  return (\n    <header>\n      <div className=\"mdl-grid\">\n        <div className=\"mdl-cell mdl-cell--middle mdl-cell--6-col\">\n          <h1>To do list</h1>\n        </div>\n        <div className=\"mdl-cell mdl-cell--middle mdl-cell--6-col\">\n          {toDo} more to do, {done} done\n        </div>\n      </div>\n      <div className=\"mdl-grid\">\n        <div className=\"mdl-cell mdl-cell--6-col\">\n          <Search onSearchChange={onSearchChange} />\n        </div>\n        <div className=\"mdl-cell mdl-cell--6-col\">\n          <Filter\n            filter={filter}\n            onFilterChange={onFilterChange}\n          />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nimport './index.css';\n\nexport default class TodoItem extends Component {\n  render() {\n    const {\n      label,\n      onDeleted,\n      onToggleDone,\n      onToggleImportant,\n      done,\n      important\n    } = this.props;\n\n    let todoClasses = 'mdl-list__item';\n\n    if (done) todoClasses += ' mdl-list__item--done';\n\n    if (important) todoClasses += ' mdl-list__item--active';\n\n    return (\n      <li className={todoClasses}>\n        <span onClick={onToggleDone}>{label}</span>\n        <div className=\"mdl-list__buttons\">\n          <button\n            className=\"mdl-button mdl-button--important mdl-js-button mdl-button--fab mdl-js-ripple-effect\"\n            onClick={onToggleImportant}\n          >\n            <i className=\"material-icons\">error_outline</i>\n          </button>\n          <button\n            className=\"mdl-button mdl-button--delete mdl-js-button mdl-button--fab mdl-js-ripple-effect\"\n            onClick={onDeleted}\n          >\n            <i className=\"material-icons\">delete</i>\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport TodoItem from '../TodoItem';\n\nimport './index.css';\n\nexport default class TodoList extends Component {\n  render() {\n    const { todos, onDeleted, onToggleImportant, onToggleDone } = this.props;\n\n    const items = todos.map(todo => {\n      const { id, ...todoProps } = todo;\n      return (\n        <TodoItem\n          key={todo.id}\n          {...todoProps}\n          onDeleted={() => onDeleted(todo.id)}\n          onToggleImportant={() => onToggleImportant(todo.id)}\n          onToggleDone={() => onToggleDone(todo.id)}\n        />\n      );\n    });\n\n    return <ul className=\"mdl-list\">{items}</ul>;\n  }\n}\n","import React, { Component } from 'react';\n\nimport './index.css';\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: ''\n  };\n\n  onLabelChange = e => {\n    this.setState({\n      label: e.target.value\n    })\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { label } = this.state;\n    if(label !== '') {\n      this.props.onItemAdded(label);\n      this.setState({\n        label: ''\n      });\n    }\n  };\n\n  render() {\n    return (\n      <form\n        className=\"mdl-grid add-item-form\"\n        onSubmit={this.onSubmit}\n      >\n        <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n          <input\n            className=\"mdl-textfield__input\" type=\"text\" id=\"add-item-input\"\n            onChange={this.onLabelChange}\n            value={this.state.label}\n          />\n          <label className=\"mdl-textfield__label\" htmlFor=\"add-item-input\">What needs to be done?</label>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"mdl-button mdl-button--colored mdl-js-button mdl-button--raised mdl-js-ripple-effect\"\n        >\n          Add item\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport './index.css';\n\nimport Header from '../Header';\nimport TodoList from '../TodoList';\nimport ItemAddForm from '../ItemAddForm';\n\nexport default class App extends Component {\n  createTodoItem = label => {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: Math.random() * 100\n    }\n  };\n\n  state = {\n    todos: [\n      this.createTodoItem('Drink coffee'),\n      this.createTodoItem('Create react app')\n    ],\n    term: '',\n    filter: 'all'\n  };\n\n  deleteItem = id => {\n    this.setState(({ todos }) => {\n      const index = todos.findIndex(el => el.id === id);\n      const before = todos.slice(0, index);\n      const after = todos.slice(index + 1);\n\n      return {\n        todos: [...before, ...after]\n      };\n    });\n  };\n\n  addItem = label => {\n    this.setState(({ todos }) => {\n      return {\n        todos: [...todos, this.createTodoItem(label)]\n      };\n    });\n  };\n\n  toggleProperty = (arr, id, propName) => {\n    const index = arr.findIndex(el => el.id === id);\n\n    const oldItem = arr[index];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [...arr.slice(0, index), newItem, ...arr.slice(index + 1)];\n  };\n\n  onToggleImportant = id => {\n    this.setState(({ todos }) => {\n      return {\n        todos: this.toggleProperty(todos, id, 'important')\n      }\n    })\n  };\n\n  onToggleDone = id => {\n    this.setState(({ todos }) => {\n      return {\n        todos: this.toggleProperty(todos, id, 'done')\n      }\n    })\n  };\n\n  onSearchChange = (term) => {\n    this.setState({ term });\n  };\n\n  onFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  search = (items, term) => {\n    switch (true) {\n      case (term.length === 0):\n        return items;\n      case (term.length > 0):\n        return items.filter(item => {\n          return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n        });\n      default:\n        break;\n    }\n  };\n\n  filter = (items, filter) => {\n    switch(filter) {\n      case 'active':\n        return items.filter(item => !item.done);\n      case 'done':\n        return items.filter(item => item.done);\n      default:\n        return items;\n    }\n  };\n\n  render() {\n    const { todos, term, filter } = this.state;\n\n    const doneCount = todos.filter(item => item.done).length;\n    const todoCount = todos.length - doneCount;\n    const visibleItems = this.filter(this.search(todos, term), filter);\n\n    return (\n      <div className=\"mdl-layout\">\n        <Header\n          toDo={todoCount}\n          done={doneCount}\n          onSearchChange={this.onSearchChange}\n          filter={filter}\n          onFilterChange={this.onFilterChange}\n        />\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}